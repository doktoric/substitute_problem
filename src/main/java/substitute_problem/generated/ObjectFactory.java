//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.10.09 at 09:25:35 PM CEST 
//


package substitute_problem.generated;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the substitute_problem.generated package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _Product_QNAME = new QName("", "product");
    private final static QName _Items_QNAME = new QName("", "items");
    private final static QName _Umbrella_QNAME = new QName("", "umbrella");
    private final static QName _Hat_QNAME = new QName("", "hat");
    private final static QName _Shirt_QNAME = new QName("", "shirt");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: substitute_problem.generated
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link ProductType }
     * 
     */
    public ProductType createProductType() {
        return new ProductType();
    }

    /**
     * Create an instance of {@link ItemsType }
     * 
     */
    public ItemsType createItemsType() {
        return new ItemsType();
    }

    /**
     * Create an instance of {@link UmbrellaType }
     * 
     */
    public UmbrellaType createUmbrellaType() {
        return new UmbrellaType();
    }

    /**
     * Create an instance of {@link ShirtType }
     * 
     */
    public ShirtType createShirtType() {
        return new ShirtType();
    }

    /**
     * Create an instance of {@link HatType }
     * 
     */
    public HatType createHatType() {
        return new HatType();
    }

    /**
     * Create an instance of {@link ShirtSizeType }
     * 
     */
    public ShirtSizeType createShirtSizeType() {
        return new ShirtSizeType();
    }

    /**
     * Create an instance of {@link HatSizeType }
     * 
     */
    public HatSizeType createHatSizeType() {
        return new HatSizeType();
    }

    /**
     * Create an instance of {@link ColorType }
     * 
     */
    public ColorType createColorType() {
        return new ColorType();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ProductType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "product")
    public JAXBElement<ProductType> createProduct(ProductType value) {
        return new JAXBElement<ProductType>(_Product_QNAME, ProductType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ItemsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "items")
    public JAXBElement<ItemsType> createItems(ItemsType value) {
        return new JAXBElement<ItemsType>(_Items_QNAME, ItemsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link UmbrellaType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "umbrella", substitutionHeadNamespace = "", substitutionHeadName = "product")
    public JAXBElement<UmbrellaType> createUmbrella(UmbrellaType value) {
        return new JAXBElement<UmbrellaType>(_Umbrella_QNAME, UmbrellaType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link HatType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "hat")
    public JAXBElement<HatType> createHat(HatType value) {
        return new JAXBElement<HatType>(_Hat_QNAME, HatType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ShirtType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "shirt", substitutionHeadNamespace = "", substitutionHeadName = "product")
    public JAXBElement<ShirtType> createShirt(ShirtType value) {
        return new JAXBElement<ShirtType>(_Shirt_QNAME, ShirtType.class, null, value);
    }

}
